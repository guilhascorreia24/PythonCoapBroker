import json
import logging
import asyncio
import sys

from aiocoap import *

logging.basicConfig(level=logging.INFO)


async def main():
    #ip = "35.216.198.132"
    ip="localhost"
    port = "4040"
    protocol = await Context.create_client_context()
    # post
    print("hello client")
    # measuement
    payload=b'\n\x06(,\x02AV\xaf\x10\x01\x18\x14"\r\x08\x05\x10\xe0\xf7\xe1\xa7\x06*\x03\x01\xc1\x07(\xac\xff\xe1\xa7\x060\x148\x0c@\x01Hw\x82\x01\x00'
    #payload= b'\n\x06(,\x02@\xfd4\x10\x01\x18<"\x0e\x08\x01\x10\xdc\xb6\xbc\xa3\x06 \x86\x03*\x01\x00"\x0e\x08\x02\x10\xdc\xb6\xbc\xa3\x06 \x8e\x01*\x01\x00(\xfd\xba\xbc\xa3\x060\x048\t@\x01H\xa1\x01\x82\x01\x00'
    #config
    #payload=b'\x10\x1e\x18x \xff\xff\xff\xff\x0f(\xff\xff\xff\xff\x0fH\xff\xff\x03P\xff\xff\x03Z\x0e35.216.198.132`\xc8\x1fj\r18.184.24.239p\xd0\x86\x03x\xb0,\x82\x01\x01\x7f\x88\x01\xc0\x84=\xa2\x01\x03\x82\xa2\x01\xa8\x01\xcc\x01\xb8\x01\xff\x01\xc2\x01$00000000-0000-0000-0000-000000000000\xca\x01\x06(,\x02@\xfd4\xd0\x01\x01\xda\x01\x06\x01\x02\x00\x00\x00\x00\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe2\x01\x02\x10\x01\xe8\x01\xff\xff\xff\xff\x0f\xf8\x01\xff\xff\x03\x82\x02\x01m\x8a\x02\x01c\x92\x02\x01i\x9a\x02\x01t\xa0\x02\x01\xb0\x02\xf5\xee\xdd\xa3\x06\xb8\x02\xd0\xc2\xf6\xa3\x06\xc0\x02\xe8\xfb\x03\xc8\x02\xe8\xfb\x03\xd2\x02\x08\xff\x01\xff\x01\xff\x01\xff\x01\xd8\x02\x82\xde4\xe0\x02\x02\xf2\x02\x12\x08\x02\x01\x01\x02\x02\x0b\x01\x0b\xff\xff\x03\xff\xff\x03\xff\xff\x03\xfa\x02\x02\x18\x01\xfa\x02\x02\x18\x01\xfa\x02\x02\x18\x01\xfa\x02\x02\x18\x01\xfa\x02\x02\x18\x01\xfa\x02\x02\x18\x01'
    #info
    #payload=b''
    #payload=b'\n\x06(,\x02AV\xaf\x18\x8a\x0cj\x1f\x08\xba\xe3\x9c\x02\x12\x07\xcb\xbc\x01\x00\xcb\xbc\x01\x18* \xf7\x1b(*0\x84\xe5\xc6\xa4\x0684@\x18r6\x08\x01\x122\xdca\x04\xa6\x05\xaa\x98\xd9D\xc9\x01\x0f\xbb\x01\x0c(\xbe\x0c\x00\xcc\x03\x04\x01\x01\x01\x00\x00\x00\x00\x00\xf6\x06\xbc\x02\x0e\n\x00\x00\x02\x00\x02\x00\xe0\xa1(\xd6\xae\x01\x84\x01z\x07040df20\x82\x01\x00\x8a\x018\x00\x8c\xdf\x80\xa4\x06\x90\xbf\x03\x8e \x00\x00n\x00\x00\x85\x04\x00\x00\x00\x00\x00\xb0\x80\xaa\xa2\x06\xa8\xde\x80\xa4\x06\x90\xe3\xfc\xa3\x06\xff\xff\xff\xff\x0f\xff\xff\xff\xff\x0f\xff\xff\xff\xff\x0f\x8c\x9f\x02\x92\x01\x08\x08\x93\xd8\xc4\xa4\x06\x10\x06'
    print(payload)
    request = Message(code=POST, uri='coap://'+ip +
                      ':'+port+'/m', payload=payload)
    try:
        response = await protocol.request(request).response
        print("response:"+str(response))
    except Exception as e:
        print('Failed to fetch resource:')
        print(e)
    else:
        print("request:"+str(request))

if __name__ == "__main__":
    asyncio.run(main())
